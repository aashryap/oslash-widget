{"version":3,"file":"main.2fa5bf6f28665c0de04d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;;AANA;;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;;AANA;;AASA;AAiBA;;AAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAbA;AAkBA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;AACA;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AADA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AADA;AAiBA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAGA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AApCA;AAAA;AAAA;AAAA;AAAA;AAwDA;;AAtOA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA","sources":["webpack://intro-storybook-react-template/./src/common/Dropdown/index.js"],"sourcesContent":["import React, {useEffect, useState, useRef} from \"react\";\n\nimport \"./dropdown.css\";\n\nconst Icon = () => {\n  return (\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n    </svg>\n  );\n};\n\nconst CloseIcon = () => {\n    return (\n        <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n            <path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path>\n        </svg>\n    );\n};\n\n\nconst Dropdown = ({ \n    placeHolder, \n    options, \n    isMulti, \n    isSearchable, \n    groupingEnabled, \n    footerComponent,\n    showCaretIcon = true,\n    classes={\n      dropdownContainer: ''\n    },\n    value,\n    onChange=() => {},\n    rightCtaProps = {\n      visible: false,\n      text: 'Click',\n      onClick: () => {}\n    } }) => {\n    const [showMenu, setShowMenu] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(isMulti ? (value || []) : (value || null));\n\n    const [searchValue, setSearchValue] = useState(\"\");\n    const searchRef = useRef();\n\n    useEffect(() => {\n      console.log(\"ashdkjashdkjhsakjdhaskjd \", value)\n      setSelectedValue(value)\n    }, [value])\n\n    useEffect(() => {\n      const handleEnterOnSearch = (event) => {\n        if (event.keyCode == 13) {\n          if (searchRef?.current?.value?.length > 0 && getOptions(searchRef?.current?.value).length > 0) {\n            // onItemClick(getOptions(searchRef?.current?.value)[0]);\n            // setSearchValue(\"\");\n          }\n          return true;\n       }\n      }\n      document.addEventListener('keypress', handleEnterOnSearch)\n      return () => {\n        document.removeEventListener('keypress', handleEnterOnSearch)\n      };\n    }, [])\n\n    useEffect(() => {\n        setSearchValue(\"\");\n        if (showMenu && searchRef.current) {\n            searchRef.current.focus();\n        }\n    }, [showMenu]);\n  \n    const onSearch = (e) => {\n        setSearchValue(e.target.value);\n    };\n    \n    const grouping = (options) => {\n      let group = {\n        others: []\n      };\n      for (let i=0;i<options.length;i++) {\n        if (options[i].group !== undefined) {\n          group[options[i].group] = (group[options[i].group] ||  []).push(options[i]) ;\n        } else {\n          group['others'].push(options[i])\n        }\n      }\n      console.log({group})\n      return options;\n    }\n\n    const getOptions = (query=searchValue) => {\n        if (!query) {\n            return options;\n        }\n        return options.filter((option) => option.label.toLowerCase().indexOf(query.toLowerCase()) >= 0);\n    };\n\n    const getDisplay = () => {\n        if (!selectedValue || selectedValue.length === 0) {\n            return isSearchable ? (\n              <div className=\"search-box\">\n                  <input className={`${showMenu ? 'search-box-input-active' : ''}`} onChange={onSearch} placeholder={placeHolder} value={searchValue} ref={searchRef} />\n              </div>) : \n              <div>\n               {placeHolder}\n              </div>\n        }\n        if (isMulti) {\n        return (\n            <>\n              <div className=\"dropdown-search\">\n                    {selectedValue.map((option) => (\n                        <div key={option.value} className=\"dropdown-tag-item\">\n                            {option.label}\n                            <span onClick={(e) => onTagRemove(e, option)} className=\"dropdown-tag-close\"><CloseIcon /></span>\n                        </div>\n                    ))}\n                {/* </div> */}\n                {isSearchable && (\n                  <div className=\"search-box\">\n                      <input  className={`${showMenu ? 'search-box-input-active' : ''}`} onChange={onSearch} placeholder={placeHolder} value={searchValue} ref={searchRef} />\n                  </div>)\n                }\n              </div>\n            </> \n        );\n    }\n    return <div>{selectedValue.label}</div>;\n  };\n\n  const onItemClick = (option) => {\n    let newValue;\n    if (isMulti) {\n        if (selectedValue.findIndex((o) => o.value === option.value) >= 0) {\n            newValue = removeOption(option);\n        } else {\n            newValue = [...selectedValue, option];\n        }\n    } else {\n        newValue = option;\n    }\n    setSelectedValue(newValue);\n    onChange(newValue);\n  }\n\n  const isSelected = (option) => {\n    if (isMulti) {\n        return (selectedValue || []).filter((o) => o.value === option.value).length > 0;\n    }\n    if(!selectedValue) {\n        return false;\n    }\n    return selectedValue.value === option.value;\n  }\n\n    const removeOption = (option) => {\n        return (selectedValue || []).filter((o) => o.value !== option.value);\n    };\n\n    const onTagRemove = (e, option) => {\n        e.stopPropagation();\n        setSelectedValue(removeOption(option));\n    };\n  \n  useEffect(() => {\n    const handler = () => setShowMenu(false);\n    window.addEventListener('click', handler);\n    return () => {\n        window.addEventListener('click', handler);\n    }\n  }, [])\n\n  const handleInputClick = (e) => {\n    e.stopPropagation();\n    setShowMenu(!showMenu);\n  }\n\n  const renderOptionComponent = (option) => {\n    if (option.renderer) {\n      return <option.renderer option={option} isSelected={isSelected(option)} onItemClick={onItemClick} />\n    }\n    return <div \n              key={option.value} \n              onClick={() => onItemClick(option)} \n              className={`dropdown-item ${isSelected(option) && \"selected\"}`}\n            >\n            {\n              option.label\n            }\n            </div>; \n  }\n  \n  return (\n    <div className={`${classes?.dropdownContainer} dropdown-container`}>\n      {\n        showMenu ?\n        <div className=\"dropdown-search-bar search-bar-active\">\n          <div onClick={handleInputClick} className=\"dropdown-input\">\n            <div className=\"dropdown-selected-value\">{getDisplay()}</div>\n            {showCaretIcon ? <Icon /> : null}\n          </div>\n          {\n            rightCtaProps?.visible && \n            <div className=\"dropdown-right-active\">\n              <div className=\"dropdown-cta\" onClick={rightCtaProps?.onClick}>\n                <span>{rightCtaProps?.text}</span>\n              </div>\n            </div>\n          }\n      </div> :\n        <div className=\"dropdown-search-bar\">\n          <div onClick={handleInputClick} className={`dropdown-input ${rightCtaProps.visible ? 'w-80' : ''}`}>\n            <div className=\"dropdown-selected-value\">{getDisplay()}</div>\n            {showCaretIcon ? <Icon /> : null}\n          </div>\n          {\n            rightCtaProps?.visible && \n            <div className=\"dropdown-right\">\n              <div onClick={rightCtaProps?.onClick}>\n                {\n                  rightCtaProps?.text\n                }\n              </div>\n            </div>\n          }\n        </div>\n      }\n      \n      {\n        showMenu && <div className=\"dropdown-menu\">\n        {\n            getOptions().map((option) => {\n                return renderOptionComponent(option);    \n            })\n        }\n        {\n          footerComponent && \n          <div className=\"dropdown-footer\">\n            {\n              footerComponent\n            }\n          </div>\n        }\n          \n        </div>\n      }\n      \n    </div>\n  );\n};\n\nexport default Dropdown;"],"names":[],"sourceRoot":""}